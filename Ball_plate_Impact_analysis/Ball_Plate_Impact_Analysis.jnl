# -*- coding: mbcs -*-
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(500.0, 250.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].parts.changeKey(fromName='Part-1', toName='Plate')
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].ConstructionLine(point1=(0.0, 
    -100.0), point2=(0.0, 100.0))
mdb.models['Model-1'].sketches['__profile__'].FixedConstraint(entity=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].CircleByCenterPerimeter(center=(
    0.0, 0.0), point1=(0.0, 18.75))
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[1], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[0], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].RadialDimension(curve=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], radius=35.0, 
    textPoint=(-43.4683227539063, 7.81116104125977))
mdb.models['Model-1'].sketches['__profile__'].Line(point1=(0.0, 35.0), point2=(
    0.0, -35.0))
mdb.models['Model-1'].sketches['__profile__'].VerticalConstraint(addUndoState=
    False, entity=mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].PerpendicularConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[4])
mdb.models['Model-1'].sketches['__profile__'].CoincidentConstraint(
    addUndoState=False, entity1=
    mdb.models['Model-1'].sketches['__profile__'].vertices[2], entity2=
    mdb.models['Model-1'].sketches['__profile__'].geometry[2])
mdb.models['Model-1'].sketches['__profile__'].autoTrimCurve(curve1=
    mdb.models['Model-1'].sketches['__profile__'].geometry[3], point1=(
    35.0361442565918, 5.91032600402832))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Ball', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Ball'].BaseSolidRevolve(angle=360.0, 
    flipRevolveDirection=OFF, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='steel')
mdb.models['Model-1'].materials['steel'].Density(table=((7.85e-09, ), ))
mdb.models['Model-1'].materials['steel'].Elastic(table=((210000.0, 0.3), ))
mdb.models['Model-1'].Material(name='aluminium')
mdb.models['Model-1'].materials['aluminium'].Density(table=((2.85e-09, ), ))
mdb.models['Model-1'].materials['aluminium'].Elastic(table=((72000.0, 0.33), ))
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='steel', name='Section-1', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=5.0, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].HomogeneousSolidSection(material='aluminium', name='ball'
    , thickness=None)
mdb.models['Model-1'].parts['Ball'].Set(cells=
    mdb.models['Model-1'].parts['Ball'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['Ball'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Ball'].sets['Set-1'], sectionName='ball', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].parts['Plate'].Set(faces=
    mdb.models['Model-1'].parts['Plate'].faces.getSequenceFromMask(('[#1 ]', ), 
    ), name='Set-1')
mdb.models['Model-1'].parts['Plate'].SectionAssignment(offset=0.0, offsetField=
    '', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Plate'].sets['Set-1'], sectionName='Section-1'
    , thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Ball-1', part=
    mdb.models['Model-1'].parts['Ball'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Plate-1', 
    part=mdb.models['Model-1'].parts['Plate'])
mdb.models['Model-1'].rootAssembly.instances['Plate-1'].translate(vector=(85.0, 
    0.0, 0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByMidPoint(point1=
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].edges[3], MIDDLE), 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].edges[1], MIDDLE))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Ball-1', ), vector=
    (335.0, 125.0, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Ball-1', ), vector=
    (0.0, 0.0, 37.5))
mdb.models['Model-1'].rootAssembly.makeDependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Ball-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Plate-1']))
mdb.models['Model-1'].parts['Plate'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=5.0)
mdb.models['Model-1'].parts['Plate'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=7.0)
mdb.models['Model-1'].parts['Plate'].generateMesh()
mdb.models['Model-1'].parts['Ball'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=4.0)
mdb.models['Model-1'].parts['Ball'].setMeshControls(elemShape=TET, regions=
    mdb.models['Model-1'].parts['Ball'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), technique=FREE)
mdb.models['Model-1'].parts['Ball'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD)), 
    regions=(mdb.models['Model-1'].parts['Ball'].cells.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].parts['Ball'].setElementType(elemTypes=(ElemType(
    elemCode=C3D20R, elemLibrary=STANDARD), ElemType(elemCode=C3D15, 
    elemLibrary=STANDARD), ElemType(elemCode=C3D10, elemLibrary=STANDARD, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Ball'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), ))
mdb.models['Model-1'].parts['Ball'].generateMesh()
mdb.models['Model-1'].parts['Plate'].setElementType(elemTypes=(ElemType(
    elemCode=S4R, elemLibrary=EXPLICIT, secondOrderAccuracy=OFF, 
    hourglassControl=DEFAULT), ElemType(elemCode=S3R, elemLibrary=EXPLICIT)), 
    regions=(mdb.models['Model-1'].parts['Plate'].faces.getSequenceFromMask((
    '[#1 ]', ), ), ))
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ContactProperty('friction')
mdb.models['Model-1'].interactionProperties['friction'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['friction'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['friction'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='CP-1-Plate-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-1-Ball-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Ball-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactStd(adjustMethod=NONE, 
    contactControls='', createStepName='Initial', enforcement=
    SURFACE_TO_SURFACE, interactionProperty='friction', master=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-1-Plate-1'], name=
    'CP-1-Plate-1-Ball-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-1-Ball-1'], sliding=FINITE, 
    surfaceSmoothing=AUTOMATIC)
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    nlgeom=OFF, previous='Initial', timePeriod=0.01)
#* Interaction cannot be used with the current procedure.
del mdb.models['Model-1'].interactions['CP-1-Plate-1-Ball-1']
del mdb.models['Model-1'].interactionProperties['friction']
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    nlgeom=OFF, previous='Initial', timePeriod=0.01)
mdb.models['Model-1'].ContactProperty('IntProp-1')
mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].tangentialBehavior.setValues(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['IntProp-1'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].rootAssembly.Surface(name='CP-2-Plate-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].rootAssembly.Surface(name='CP-2-Ball-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Ball-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].SurfaceToSurfaceContactExp(contactControls='', 
    createStepName='Initial', interactionProperty='IntProp-1', master=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-2-Plate-1'], name=
    'CP-1-Plate-1-Ball-1', slave=
    mdb.models['Model-1'].rootAssembly.surfaces['CP-2-Ball-1'], sliding=FINITE)
mdb.models['Model-1'].rootAssembly.Set(edges=
    mdb.models['Model-1'].rootAssembly.instances['Plate-1'].edges.getSequenceFromMask(
    ('[#f ]', ), ), name='Set-1')
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-1'])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Ball-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='Set-2')
mdb.models['Model-1'].VelocityBC(amplitude=UNSET, createStepName='Step-1', 
    distributionType=UNIFORM, fieldName='', localCsys=None, name='BC-2', 
    region=mdb.models['Model-1'].rootAssembly.sets['Set-2'], v1=UNSET, v2=UNSET
    , v3=-10000.0, vr1=UNSET, vr2=UNSET, vr3=UNSET)
# Save by RAMKISHOR DHAKAD on 2022_08_20-20.09.12; build 2019 2018_09_25-00.11.51 157541
# Save by RAMKISHOR DHAKAD on 2022_08_20-20.09.16; build 2019 2018_09_25-00.11.51 157541
# Save by RAMKISHOR DHAKAD on 2022_08_20-20.09.16; build 2019 2018_09_25-00.11.51 157541
# Save by RAMKISHOR DHAKAD on 2022_08_20-20.09.17; build 2019 2018_09_25-00.11.51 157541
# Save by RAMKISHOR DHAKAD on 2022_08_20-20.09.30; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='BallImpact', nodalOutputPrecision=SINGLE
    , numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None
    , resultsFormat=ODB, scratch=
    'D:\\Ramkishore\\Cantilever\\Prooject\\Analysis\\Analysis\\Resume_Project\\Impact_Analysis'
    , type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['BallImpact'].submit(consistencyChecking=OFF)
mdb.jobs['BallImpact']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 0, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'LINEAR GEOMETRIC KINEMATICS OPTION WILL NOT BE SUPPORTED IN FUTURE for Abaqus/Explicit ANALYSES.  LARGE DEFORMATIONS WILL BE ASSUMED.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'LINEAR GEOMETRIC KINEMATICS OPTION WILL NOT BE SUPPORTED IN FUTURE for Abaqus/Explicit ANALYSES.  LARGE DEFORMATIONS WILL BE ASSUMED.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'LINEAR GEOMETRIC KINEMATICS OPTION WILL NOT BE SUPPORTED IN FUTURE for Abaqus/Explicit ANALYSES.  LARGE DEFORMATIONS WILL BE ASSUMED.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE FROM ELEMENT TYPE C3D10 CANNOT BE USED WITH CONTACT PAIR IN ABAQUS/EXPLICIT', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE FROM ELEMENT TYPE C3D10 CANNOT BE USED WITH CONTACT PAIR IN ABAQUS/EXPLICIT', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE FROM ELEMENT TYPE C3D10 CANNOT BE USED WITH CONTACT PAIR IN ABAQUS/EXPLICIT', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'SURFACE FROM ELEMENT TYPE C3D10 CANNOT BE USED WITH CONTACT PAIR IN ABAQUS/EXPLICIT', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ERROR, {'phase': BATCHPRE_PHASE, 
    'message': 'CONTACT PAIR REFERENCES SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE ASSEMBLY_CP-2-BALL-1 BUT THIS SURFACE/NODE-BASED SURFACE/ANALYTICAL RIGID SURFACE CANNOT BE USED WITH *CONTACT PAIR. CHECK PREVIOUS WARNING MESSAGES FOR THIS SURFACE TO FIND THE CAUSE.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ODB_FILE, {'phase': BATCHPRE_PHASE, 
    'file': 'D:\\Ramkishore\\Cantilever\\Prooject\\Analysis\\Analysis\\Resume_Project\\Impact_Analysis\\BallImpact.odb', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ABORTED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase failed due to errors', 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(ERROR, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(JOB_ABORTED, {
    'message': 'Analysis Input File Processor exited with an error.', 
    'jobName': 'BallImpact'})
mdb.models['Model-1'].parts['Ball'].deleteMesh()
mdb.models['Model-1'].parts['Ball'].setElementType(elemTypes=(ElemType(
    elemCode=C3D8R, elemLibrary=EXPLICIT), ElemType(elemCode=C3D6, 
    elemLibrary=EXPLICIT), ElemType(elemCode=C3D4, elemLibrary=EXPLICIT, 
    secondOrderAccuracy=OFF, distortionControl=DEFAULT)), regions=(
    mdb.models['Model-1'].parts['Ball'].cells.getSequenceFromMask(('[#1 ]', ), 
    ), ))
mdb.models['Model-1'].parts['Ball'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.jobs['BallImpact'].submit(consistencyChecking=OFF)
mdb.jobs['BallImpact']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 0, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'LINEAR GEOMETRIC KINEMATICS OPTION WILL NOT BE SUPPORTED IN FUTURE for Abaqus/Explicit ANALYSES.  LARGE DEFORMATIONS WILL BE ASSUMED.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'LINEAR GEOMETRIC KINEMATICS OPTION WILL NOT BE SUPPORTED IN FUTURE for Abaqus/Explicit ANALYSES.  LARGE DEFORMATIONS WILL BE ASSUMED.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'LINEAR GEOMETRIC KINEMATICS OPTION WILL NOT BE SUPPORTED IN FUTURE for Abaqus/Explicit ANALYSES.  LARGE DEFORMATIONS WILL BE ASSUMED.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 4092, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 3 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Boundary conditions are defined at the nodes contained in node set WarnNodeBcIntersectKinCon. In addition the nodes are also part of a surface involved in kinematic contact. The kinematic contact constraint will be overridden by the boundary conditions in case of a conflict. Penalty contact may be used instead.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 14236, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 1.06222358908781e-07, 'stepTime': 0.0, 
    'totalEnergy': 3451.76684570313, 'cpuTime': 0.100000001490116, 
    'jobName': 'BallImpact', 'step': 1, 'increment': 0, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 3451.76684570313})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'For a self contact surface, the facets of the elements in element set WarnElemFacetThickPt63d-Step1 are thicker than 0.6 times an edge or diagonal length of the facets. Use the MAXRATIO parameter on *SURFACE to allow automatic rescaling of the contact thicknesses where necessary for this surface. Refer to the status file for further details.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(WARNING, {'phase': EXPLICIT_PHASE, 
    'message': 'The slave surface nodes in node set WarnNodeMassRatio3fix-Step1 have much larger masses than the nodes on the master surface. Significant contact noise may result. Suggested workarounds include setting the WEIGHT parameter so that what was the master surface becomes a pure slave surface in the contact pair, using mass-scaling to adjust the ratio of nodal masses, or using the penalty contact algorithm. See the status file for further details.', 
    'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.000500270689371973, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.000500270689371973, 'totalEnergy': 3379.234375, 
    'cpuTime': 3.79999995231628, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 1831, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 64213.96875})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00100009201560169, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00100009201560169, 'totalEnergy': 3379.01953125, 
    'cpuTime': 7.5, 'jobName': 'BallImpact', 'step': 1, 'increment': 3638, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 43844.69921875})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00150018988642842, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00150018988642842, 'totalEnergy': 3373.49584960938, 
    'cpuTime': 11.1999998092651, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 5446, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 16683.345703125})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.0020000112708658, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.0020000112708658, 'totalEnergy': 3372.44506835938, 
    'cpuTime': 14.8000001907349, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 7253, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 65705.5703125})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00250010914169252, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00250010914169252, 'totalEnergy': 3374.47485351563, 
    'cpuTime': 18.5, 'jobName': 'BallImpact', 'step': 1, 'increment': 9061, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 43720.45703125})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00300020701251924, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00300020701251924, 'totalEnergy': 3376.48217773438, 
    'cpuTime': 22.1000003814697, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 10869, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 29195.712890625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.0035000282805413, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.0035000282805413, 'totalEnergy': 3375.50073242188, 
    'cpuTime': 25.7000007629395, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 12676, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 75449.5})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00400012638419867, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00400012638419867, 'totalEnergy': 3373.08618164063, 
    'cpuTime': 29.2999992370605, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 14484, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 59145.19921875})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00450022425502539, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00450022425502539, 'totalEnergy': 3370.57055664063, 
    'cpuTime': 32.9000015258789, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 16292, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 46871.546875})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00500004552304745, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00500004552304745, 'totalEnergy': 3368.31079101563, 
    'cpuTime': 36.5999984741211, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 18099, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 84979.7890625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00550014339387417, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00550014339387417, 'totalEnergy': 3475.08544921875, 
    'cpuTime': 40.2999992370605, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 19907, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 66721.765625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00600024126470089, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00600024126470089, 'totalEnergy': 3574.72119140625, 
    'cpuTime': 44.0, 'jobName': 'BallImpact', 'step': 1, 'increment': 21715, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57025.16015625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00650006253272295, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00650006253272295, 'totalEnergy': 3682.20703125, 
    'cpuTime': 47.7000007629395, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 23522, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 85692.359375})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00700016040354967, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00700016040354967, 'totalEnergy': 4547.1982421875, 
    'cpuTime': 51.4000015258789, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 25330, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 85219.8515625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00750025827437639, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00750025827437639, 'totalEnergy': 3679.35717773438, 
    'cpuTime': 55.0999984741211, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 27138, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 71167.453125})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00800007954239845, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00800007954239845, 'totalEnergy': 3583.4111328125, 
    'cpuTime': 58.7999992370605, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 28945, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 78820.84375})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00850017741322517, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00850017741322517, 'totalEnergy': 3696.61010742188, 
    'cpuTime': 62.5, 'jobName': 'BallImpact', 'step': 1, 'increment': 30753, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 70135.8125})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.0090002752840519, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.0090002752840519, 'totalEnergy': 3714.47216796875, 
    'cpuTime': 66.1999969482422, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 32561, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 71293.140625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00950009655207396, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00950009655207396, 'totalEnergy': 3637.29125976563, 
    'cpuTime': 69.8000030517578, 'jobName': 'BallImpact', 'step': 1, 
    'increment': 34368, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 51302.5703125})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(STATUS, {'totalTime': 0.00999999977648258, 
    'stableTimeIncrement': 2.76619289252267e-07, 
    'stepTime': 0.00999999977648258, 'totalEnergy': 3642.78735351563, 
    'cpuTime': 73.5, 'jobName': 'BallImpact', 'step': 1, 'increment': 36176, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 44300.00390625})
mdb.jobs['BallImpact']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'BallImpact'})
mdb.jobs['BallImpact']._Message(JOB_COMPLETED, {
    'time': 'Mon Aug 22 16:23:21 2022', 'jobName': 'BallImpact'})
# Save by Misal on 2022_08_23-10.18.30; build 2019 2018_09_25-00.11.51 157541
# Save by Misal on 2022_08_23-10.28.08; build 2019 2018_09_25-00.11.51 157541
