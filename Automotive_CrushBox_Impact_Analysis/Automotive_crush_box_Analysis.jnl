# Save by RAMKISHOR DHAKAD on 2022_08_22-05.17.28; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(25.0, 25.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-1', type=
    DEFORMABLE_BODY)
mdb.models['Model-1'].parts['Part-1'].BaseShellExtrude(depth=150.0, sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].ConstrainedSketch(name='__profile__', sheetSize=200.0)
mdb.models['Model-1'].sketches['__profile__'].rectangle(point1=(0.0, 0.0), 
    point2=(50.0, 50.0))
mdb.models['Model-1'].Part(dimensionality=THREE_D, name='Part-2', type=
    DISCRETE_RIGID_SURFACE)
mdb.models['Model-1'].parts['Part-2'].BaseShell(sketch=
    mdb.models['Model-1'].sketches['__profile__'])
del mdb.models['Model-1'].sketches['__profile__']
mdb.models['Model-1'].Material(name='Aluminium')
mdb.models['Model-1'].materials['Aluminium'].Density(table=((2.9e-06, ), ))
mdb.models['Model-1'].materials['Aluminium'].Elastic(table=((69000.0, 0.29), ))
mdb.models['Model-1'].materials['Aluminium'].Plastic(table=((120.0, 0.0), (
    160.0, 0.05), (200.0, 0.07), (220.0, 0.1), (240.0, 0.15)))
mdb.models['Model-1'].HomogeneousShellSection(idealization=NO_IDEALIZATION, 
    integrationRule=SIMPSON, material='Aluminium', name='box', 
    nodalThicknessField='', numIntPts=5, poissonDefinition=DEFAULT, 
    preIntegrate=OFF, temperature=GRADIENT, thickness=1.0, thicknessField='', 
    thicknessModulus=None, thicknessType=UNIFORM, useDensity=OFF)
mdb.models['Model-1'].parts['Part-1'].Set(faces=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#f ]', 
    ), ), name='box')
mdb.models['Model-1'].parts['Part-1'].SectionAssignment(offset=0.0, 
    offsetField='', offsetType=MIDDLE_SURFACE, region=
    mdb.models['Model-1'].parts['Part-1'].sets['box'], sectionName='box', 
    thicknessAssignment=FROM_SECTION)
mdb.models['Model-1'].rootAssembly.DatumCsysByDefault(CARTESIAN)
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-1-1', 
    part=mdb.models['Model-1'].parts['Part-1'])
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-1', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].translate(vector=(
    30.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.Instance(dependent=OFF, name='Part-2-2', 
    part=mdb.models['Model-1'].parts['Part-2'])
mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].translate(vector=(
    85.0, 0.0, 0.0))
mdb.models['Model-1'].rootAssembly.DatumPointByMidPoint(point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges[0], MIDDLE), 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges[7], MIDDLE))
mdb.models['Model-1'].rootAssembly.DatumPointByMidPoint(point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges[1], MIDDLE), 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].edges[3], MIDDLE))
mdb.models['Model-1'].rootAssembly.DatumPointByMidPoint(point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].edges[3], MIDDLE), 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].edges[1], MIDDLE))
mdb.models['Model-1'].rootAssembly.DatumPointByMidPoint(point1=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges[6], MIDDLE), 
    point2=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].InterestingPoint(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].edges[11], 
    MIDDLE))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-2-1', ), 
    vector=(-42.5, -12.5, 0.0))
mdb.models['Model-1'].rootAssembly.translate(instanceList=('Part-2-2', ), 
    vector=(-97.5, -12.5, 150.0))
mdb.models['Model-1'].rootAssembly.seedPartInstance(deviationFactor=0.1, 
    minSizeFactor=0.1, regions=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2']), size=2.0)
mdb.models['Model-1'].rootAssembly.makeDependent(instances=(
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'], 
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2']))
mdb.models['Model-1'].parts['Part-1'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Part-1'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Part-1'].faces.getSequenceFromMask(('[#f ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Part-1'].generateMesh()
mdb.models['Model-1'].parts['Part-2'].seedPart(deviationFactor=0.1, 
    minSizeFactor=0.1, size=2.0)
mdb.models['Model-1'].parts['Part-2'].setMeshControls(elemShape=QUAD, regions=
    mdb.models['Model-1'].parts['Part-2'].faces.getSequenceFromMask(('[#1 ]', 
    ), ), technique=STRUCTURED)
mdb.models['Model-1'].parts['Part-2'].generateMesh()
mdb.models['Model-1'].rootAssembly.regenerate()
mdb.models['Model-1'].ExplicitDynamicsStep(improvedDtMethod=ON, name='Step-1', 
    previous='Initial', timePeriod=0.07)
# Save by RAMKISHOR DHAKAD on 2022_08_22-05.28.17; build 2019 2018_09_25-00.11.51 157541
# Save by RAMKISHOR DHAKAD on 2022_08_22-05.28.18; build 2019 2018_09_25-00.11.51 157541
# Save by RAMKISHOR DHAKAD on 2022_08_22-07.22.10; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(name='nodesetBottom', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].nodes.getSequenceFromMask(
    mask=('[#ac #0 #c0000000 #3ff #0:4 #3ffc00 #0:2', ' #fff000 #fff0 ]', ), ))
mdb.models['Model-1'].rootAssembly.Set(name='nodeseTop', nodes=
    mdb.models['Model-1'].rootAssembly.instances['Part-1-1'].nodes.getSequenceFromMask(
    mask=('[#fff53 #0:4 #fff00000 #0:2 #ffc00000 #3 #0', ' #ff000000 #f ]', ), 
    ))
mdb.models['Model-1'].ContactProperty('friction')
mdb.models['Model-1'].interactionProperties['friction'].TangentialBehavior(
    dependencies=0, directionality=ISOTROPIC, elasticSlipStiffness=None, 
    formulation=PENALTY, fraction=0.005, maximumElasticSlip=FRACTION, 
    pressureDependency=OFF, shearStressLimit=None, slipRateDependency=OFF, 
    table=((0.2, ), ), temperatureDependency=OFF)
mdb.models['Model-1'].interactionProperties['friction'].NormalBehavior(
    allowSeparation=ON, constraintEnforcementMethod=DEFAULT, 
    pressureOverclosure=HARD)
mdb.models['Model-1'].ContactExp(createStepName='Step-1', name='Int-1')
mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
    stepName='Step-1', useAllstar=ON)
mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
    assignments=((GLOBAL, SELF, 'friction'), ), stepName='Step-1')
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-1', side1Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=OFF, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-1'], name='ConstBottom'
    , positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.sets['nodesetBottom'], thickness=ON, 
    tieRotations=OFF)
mdb.models['Model-1'].rootAssembly.Surface(name='m_Surf-2', side2Faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].faces.getSequenceFromMask(
    ('[#1 ]', ), ))
mdb.models['Model-1'].Tie(adjust=OFF, master=
    mdb.models['Model-1'].rootAssembly.surfaces['m_Surf-2'], name=
    'CosstrainTop', positionToleranceMethod=COMPUTED, slave=
    mdb.models['Model-1'].rootAssembly.sets['nodeseTop'], thickness=ON, 
    tieRotations=OFF)
# Save by Misal on 2022_08_27-12.42.31; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.datums[10])
mdb.models['Model-1'].rootAssembly.ReferencePoint(point=
    mdb.models['Model-1'].rootAssembly.datums[11])
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-1'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='b_Set-3')
mdb.models['Model-1'].RigidBody(bodyRegion=
    mdb.models['Model-1'].rootAssembly.sets['b_Set-3'], name='rigid', 
    refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[20], )))
mdb.models['Model-1'].rootAssembly.Set(faces=
    mdb.models['Model-1'].rootAssembly.instances['Part-2-2'].faces.getSequenceFromMask(
    ('[#1 ]', ), ), name='b_Set-5')
mdb.models['Model-1'].RigidBody(bodyRegion=
    mdb.models['Model-1'].rootAssembly.sets['b_Set-5'], name='rigid2', 
    refPointRegion=Region(referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[19], )))
# Save by Misal on 2022_08_27-12.45.34; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.models['Model-1'].rootAssembly.Set(name='Set-7', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[19], ))
mdb.models['Model-1'].rootAssembly.engineeringFeatures.PointMassInertia(alpha=
    0.0, composite=0.0, mass=100.0, name='mass100', region=
    mdb.models['Model-1'].rootAssembly.sets['Set-7'])
mdb.models['Model-1'].rootAssembly.Set(name='Set-8', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[20], ))
mdb.models['Model-1'].EncastreBC(createStepName='Initial', localCsys=None, 
    name='BC-1', region=mdb.models['Model-1'].rootAssembly.sets['Set-8'])
mdb.models['Model-1'].TabularAmplitude(data=((0.0, 0.0), (0.07, 1.0)), name=
    'Amp-1', smooth=SOLVER_DEFAULT, timeSpan=STEP)
mdb.models['Model-1'].rootAssembly.Set(name='Set-9', referencePoints=(
    mdb.models['Model-1'].rootAssembly.referencePoints[19], ))
mdb.models['Model-1'].DisplacementBC(amplitude='Amp-1', createStepName='Step-1'
    , distributionType=UNIFORM, fieldName='', fixed=OFF, localCsys=None, name=
    'BC-2', region=mdb.models['Model-1'].rootAssembly.sets['Set-9'], u1=UNSET, 
    u2=UNSET, u3=-75.0, ur1=UNSET, ur2=UNSET, ur3=UNSET)
mdb.Job(activateLoadBalancing=False, atTime=None, contactPrint=OFF, 
    description='', echoPrint=OFF, explicitPrecision=SINGLE, historyPrint=OFF, 
    memory=90, memoryUnits=PERCENTAGE, model='Model-1', modelPrint=OFF, 
    multiprocessingMode=DEFAULT, name='CrashBox', nodalOutputPrecision=SINGLE, 
    numCpus=1, numDomains=1, parallelizationMethodExplicit=DOMAIN, queue=None, 
    resultsFormat=ODB, scratch=
    'D:\\Ramkishore\\Cantilever\\Prooject\\Analysis\\Analysis\\Resume_Project\\Impact_Analysis\\CrashBoxJob'
    , type=ANALYSIS, userSubroutine='', waitHours=0, waitMinutes=0)
mdb.jobs['CrashBox'].submit(consistencyChecking=OFF, datacheckJob=True)
mdb.jobs['CrashBox']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 0, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 14884, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'The thickness used in the general contact algorithm for elements in element set WarnElemGContThickReduce has been reduced. See the status file for further details.', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Disconnected surfaces in the general contact domains are tied together, but the the surface connectivity is not altered, creating a seam in the contact surface.  Nodes along the tied surface perimeters have been added to node set WarnNodePerimTieSeam.', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 8412, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 9.66485276876483e-06, 'stepTime': 0.0, 
    'totalEnergy': 57398132.0, 'cpuTime': 0.0, 'jobName': 'CrashBox', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 57398132.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(JOB_COMPLETED, {
    'time': 'Sat Aug 27 12:53:11 2022', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox'].submit(consistencyChecking=OFF)
mdb.jobs['CrashBox']._Message(STARTED, {'phase': BATCHPRE_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 0, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': BATCHPRE_PHASE, 
    'message': 'THE OPTION *BOUNDARY,TYPE=DISPLACEMENT HAS BEEN USED; CHECK STATUS FILE BETWEEN STEPS FOR WARNINGS ON ANY JUMPS PRESCRIBED ACROSS THE STEPS IN DISPLACEMENT VALUES OF TRANSLATIONAL DOF. FOR ROTATIONAL DOF MAKE SURE THAT THERE ARE NO SUCH JUMPS. ALL JUMPS IN DISPLACEMENTS ACROSS STEPS ARE IGNORED', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(COMPLETED, {'phase': BATCHPRE_PHASE, 
    'message': 'Analysis phase complete', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STARTED, {'phase': PACKAGER_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 14640, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'There are 1 warning messages in the data (.dat) file.  Please check the data file for possible errors in the input file.', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'The thickness used in the general contact algorithm for elements in element set WarnElemGContThickReduce has been reduced. See the status file for further details.', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(WARNING, {'phase': PACKAGER_PHASE, 
    'message': 'Disconnected surfaces in the general contact domains are tied together, but the the surface connectivity is not altered, creating a seam in the contact surface.  Nodes along the tied surface perimeters have been added to node set WarnNodePerimTieSeam.', 
    'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(COMPLETED, {'phase': PACKAGER_PHASE, 
    'message': 'Phase complete', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STARTED, {'phase': EXPLICIT_PHASE, 
    'clientHost': 'DESKTOP-CFJQST5', 'handle': 13952, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0, 
    'stableTimeIncrement': 9.66485276876483e-06, 'stepTime': 0.0, 
    'totalEnergy': 57398132.0, 'cpuTime': 0.0, 'jobName': 'CrashBox', 
    'step': 1, 'increment': 0, 'phase': EXPLICIT_PHASE, 
    'kineticEnergy': 57398132.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 0, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.00350304506719112, 
    'stableTimeIncrement': 1.0259455848427e-05, 
    'stepTime': 0.00350304506719112, 'totalEnergy': 57398992.0, 
    'cpuTime': 0.699999988079071, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 340, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57408112.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 1, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.00700558349490166, 
    'stableTimeIncrement': 1.03324964584317e-05, 
    'stepTime': 0.00700558349490166, 'totalEnergy': 57399852.0, 
    'cpuTime': 1.39999997615814, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 680, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57412216.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 2, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0105082243680954, 
    'stableTimeIncrement': 1.00885790743632e-05, 
    'stepTime': 0.0105082243680954, 'totalEnergy': 57400764.0, 
    'cpuTime': 2.09999990463257, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 1022, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57424076.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 3, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0140076940879226, 
    'stableTimeIncrement': 7.92485661804676e-06, 
    'stepTime': 0.0140076940879226, 'totalEnergy': 57402160.0, 
    'cpuTime': 2.79999995231628, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 1423, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57420704.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 4, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0175066851079464, 
    'stableTimeIncrement': 7.02226134308148e-06, 
    'stepTime': 0.0175066851079464, 'totalEnergy': 57403656.0, 
    'cpuTime': 3.70000004768372, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 1885, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57420096.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 5, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0210013259202242, 
    'stableTimeIncrement': 5.82248912905925e-06, 
    'stepTime': 0.0210013259202242, 'totalEnergy': 57406496.0, 
    'cpuTime': 4.69999980926514, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 2436, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57420000.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 6, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0245037265121937, 
    'stableTimeIncrement': 4.84904421682586e-06, 
    'stepTime': 0.0245037265121937, 'totalEnergy': 57407356.0, 
    'cpuTime': 5.90000009536743, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 3115, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57418252.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 7, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0280045475810766, 
    'stableTimeIncrement': 4.87236093249521e-06, 
    'stepTime': 0.0280045475810766, 'totalEnergy': 57408768.0, 
    'cpuTime': 7.19999980926514, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 3835, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57416812.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 8, 'jobName': 'CrashBox'})
# Save by Misal on 2022_08_27-12.54.09; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0315042734146118, 
    'stableTimeIncrement': 4.63681817564066e-06, 
    'stepTime': 0.0315042734146118, 'totalEnergy': 57410676.0, 'cpuTime': 8.5, 
    'jobName': 'CrashBox', 'step': 1, 'increment': 4563, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57416652.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 9, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0350020825862885, 
    'stableTimeIncrement': 4.6269892663986e-06, 'stepTime': 0.0350020825862885, 
    'totalEnergy': 57413080.0, 'cpuTime': 9.89999961853027, 
    'jobName': 'CrashBox', 'step': 1, 'increment': 5315, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57416540.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 10, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0385045930743217, 
    'stableTimeIncrement': 4.62890602648258e-06, 
    'stepTime': 0.0385045930743217, 'totalEnergy': 57414904.0, 
    'cpuTime': 11.1999998092651, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 6072, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57415916.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 11, 'jobName': 'CrashBox'})
# Save by Misal on 2022_08_27-12.54.13; build 2019 2018_09_25-00.11.51 157541
from part import *
from material import *
from section import *
from assembly import *
from step import *
from interaction import *
from load import *
from mesh import *
from optimization import *
from job import *
from sketch import *
from visualization import *
from connectorBehavior import *
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0420003682374954, 
    'stableTimeIncrement': 4.62123807665193e-06, 
    'stepTime': 0.0420003682374954, 'totalEnergy': 57417164.0, 
    'cpuTime': 12.6000003814697, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 6831, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57416532.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 12, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0455036424100399, 
    'stableTimeIncrement': 4.63485002910602e-06, 
    'stepTime': 0.0455036424100399, 'totalEnergy': 57420056.0, 
    'cpuTime': 14.1999998092651, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 7593, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57414796.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 13, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0490009933710098, 
    'stableTimeIncrement': 4.1397288441658e-06, 'stepTime': 0.0490009933710098, 
    'totalEnergy': 57421800.0, 'cpuTime': 15.8999996185303, 
    'jobName': 'CrashBox', 'step': 1, 'increment': 8431, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57412604.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 14, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0525004230439663, 
    'stableTimeIncrement': 4.18396757595474e-06, 
    'stepTime': 0.0525004230439663, 'totalEnergy': 57423480.0, 
    'cpuTime': 17.7000007629395, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 9274, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57411940.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 15, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0560040175914764, 
    'stableTimeIncrement': 4.1457574297965e-06, 'stepTime': 0.0560040175914764, 
    'totalEnergy': 57425708.0, 'cpuTime': 19.2999992370605, 
    'jobName': 'CrashBox', 'step': 1, 'increment': 10121, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57411548.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 16, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0595028810203075, 
    'stableTimeIncrement': 4.09510039389716e-06, 
    'stepTime': 0.0595028810203075, 'totalEnergy': 57428840.0, 'cpuTime': 21.0, 
    'jobName': 'CrashBox', 'step': 1, 'increment': 10975, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57411560.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 17, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0630010813474655, 
    'stableTimeIncrement': 3.38197355631564e-06, 
    'stepTime': 0.0630010813474655, 'totalEnergy': 57432084.0, 'cpuTime': 23.0, 
    'jobName': 'CrashBox', 'step': 1, 'increment': 11951, 
    'phase': EXPLICIT_PHASE, 'kineticEnergy': 57410660.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 18, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0665016919374466, 
    'stableTimeIncrement': 3.34357378051209e-06, 
    'stepTime': 0.0665016919374466, 'totalEnergy': 57434612.0, 
    'cpuTime': 25.2000007629395, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 12995, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57409220.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 19, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(STATUS, {'totalTime': 0.0700000002980232, 
    'stableTimeIncrement': 3.35097615788982e-06, 
    'stepTime': 0.0700000002980232, 'totalEnergy': 57436628.0, 
    'cpuTime': 27.6000003814697, 'jobName': 'CrashBox', 'step': 1, 
    'increment': 14040, 'phase': EXPLICIT_PHASE, 'kineticEnergy': 57408176.0})
mdb.jobs['CrashBox']._Message(ODB_FRAME, {'phase': EXPLICIT_PHASE, 'step': 0, 
    'frame': 20, 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(COMPLETED, {'phase': EXPLICIT_PHASE, 
    'message': 'Phase complete', 'jobName': 'CrashBox'})
mdb.jobs['CrashBox']._Message(JOB_COMPLETED, {
    'time': 'Sat Aug 27 12:54:31 2022', 'jobName': 'CrashBox'})
# Save by Misal on 2022_08_27-13.22.59; build 2019 2018_09_25-00.11.51 157541
